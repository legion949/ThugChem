colnames(nomenclature_system01) <-  set_names
# Parte3: Return
{
###
# my_exit <- list(nomenclature_system01, nomenclature_system02)
my_exit <- nomenclature_system01
return(my_exit)
###
} # Fin parte 3
######################################
} # End Function OxideNomenclature***
input_atomic_number1 <- 3 #Litio
input_valence1 <- 1
input_atomic_number2 <- 6 #Carbono
input_valence2 <- 4
input_internal_language <- "en"
input_external_language <- "en"
input_family <- "Oxosalt"
input_PeriodicTable <- PeriodicTable
input_Nomenclature <- Nomenclature
OxosaltNomenclature(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_family = input_family,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable,
input_Nomenclature = input_Nomenclature)
OxosaltNomenclature <- function(input_atomic_number1 = NULL,
input_valence1 = NULL,
input_atomic_number2 = NULL,
input_valence2 = NULL,
input_family = "Oxosalt",
input_internal_language = "en",
input_external_language = NULL,
input_PeriodicTable = NULL,
input_Nomenclature = NULL) {
# Internal Settings
{
###
# Internal language specifications by default and optional if null
input_internal_language <- "en"
if (is.null(input_external_language)) input_external_language <- input_internal_language
# If is null the input_family
#  if (is.null(input_family)) input_family <- "Oxide"
###
} # End Internal Settings
##########################################################################
# Part 0: Necessary Participants
{
###
# Element Values
element_values1 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
element_values2 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number2,
input_valence1 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Internal Control
internal_control <- InternalControl_Oxosalt(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Oxosalt Resolution
input_oxosalt_resolution <- OxosaltEquation(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# LaTeX resolution
input_oxosalt_latex <- OxosaltLaTeX(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
input_latex <- input_oxosalt_latex[[2]]
# Chemestry Formule
chemestry_formule_resolution <- input_oxosalt_resolution[nrow(input_latex), c(15:18)]
chemestry_formule_latex <- input_latex[nrow(input_latex), 8]
amount1 <- as.numeric(as.character(chemestry_formule_resolution[1,2]))
amount2 <- as.numeric(as.character(chemestry_formule_resolution[1,4]))
###
} # Fin Part 0
##############################################
# Part 1: Other Necessary Items
{
###
# Roman numerals
romans <- c("I", "II", "III", "IV", "V", "VI", "VII", "")
prefixes <- Nomenclature$Prefixes[[input_external_language]]
medium_part_classic <- Nomenclature$General01[[input_external_language]]
# This position is only for Oxosalt
my_pos <- 5
###
} # Part 1
############################################
if (1 == 2) {
# Parte2: Nomenclature System
{
###
# Only nomenclature for Oxide in the selected language
my_complet_nomenclature <- Nomenclature[[input_family]][[input_external_language]]
# Some details...
position <- ncol(my_complet_nomenclature)
my_stock_nomenclature <- my_complet_nomenclature[,position]
my_classic_nomenclature <- my_complet_nomenclature[,c((position-5): (position-1))]
set_names <- input_Nomenclature$General02[[input_external_language]][,2]
# Modifications for Language English
if (input_external_language == "en") {
# IUPAC
iupac <- paste0(prefixes[amount2, 2],element_values1$name, " ", prefixes[amount1, 2],
medium_part_classic[my_pos, input_external_language])
# Stock
stock <- paste0(my_stock_nomenclature[input_atomic_number1],
" ", "(", romans[element_values1$selected_valence], ")")
# Classic
classic <- my_classic_nomenclature[input_atomic_number1, my_pos]
# IF have 2 "Mono", eliminate the second
if(prefixes[amount1, 2] ==  prefixes[amount2, 2]){
iupac <- paste0(element_values1$name, " ", prefixes[amount1, 2],
medium_part_classic[my_pos, input_external_language])
# iupac <- "CasoB"
}
# Writing errors
iupac <- gsub("ii", "i-i", iupac)
iupac <- gsub("iI", "i-I", iupac)
iupac <- gsub("oO", "o", iupac)
}
# Modifications for Language Spanish
if (input_external_language == "es") {
# IUPAC
iupac <- paste0(prefixes[amount2, 2], element_values1$name,
prefixes[amount1, 2], medium_part_classic[my_pos, input_external_language])
# Stock
stock <- paste0(my_stock_nomenclature[input_atomic_number1],
" ", "(", romans[element_values1$selected_valence], ")")
# Classic
classic <- my_classic_nomenclature[input_atomic_number1, my_pos]
# IF have 2 "Mono", eliminate the second
if(prefixes[amount1, 2] ==  prefixes[amount2, 2]){
iupac <- paste0(prefixes[amount1, 2], medium_part_classic[my_pos, 3],
" ", element_values1$name)
}
# Writing errors
iupac <- gsub("oÓ", "Ó", iupac)
}
# Save all
nomenclature_system01 <- c(iupac, stock, classic, chemestry_formule_latex)
dim(nomenclature_system01) <- c(1, length(nomenclature_system01))
nomenclature_system01 <- as.data.frame(nomenclature_system01)
colnames(nomenclature_system01) <-  set_names
# nomenclature_system02 <- paste0(names(nomenclature_system01), ": ",nomenclature_system01 )
###
} # End Part2
################################################
}
# IUPAC
iupac <- "Coming Soon!"
# Stock
stock <- "Coming Soon!"
# Classic
classic <- "Coming Soon!"
# Save all
nomenclature_system01 <- c(iupac, stock, classic, chemestry_formule_latex)
dim(nomenclature_system01) <- c(1, length(nomenclature_system01))
nomenclature_system01 <- as.data.frame(nomenclature_system01)
colnames(nomenclature_system01) <-  set_names
# Parte3: Return
{
###
# my_exit <- list(nomenclature_system01, nomenclature_system02)
my_exit <- nomenclature_system01
return(my_exit)
###
} # Fin parte 3
######################################
} # End Function OxideNomenclature***
input_atomic_number1 <- 3 #Litio
input_valence1 <- 1
input_atomic_number2 <- 6 #Carbono
input_valence2 <- 4
input_internal_language <- "en"
input_external_language <- "en"
input_family <- "Oxosalt"
input_PeriodicTable <- PeriodicTable
input_Nomenclature <- Nomenclature
OxosaltNomenclature(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_family = input_family,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable,
input_Nomenclature = input_Nomenclature)
# Internal Settings
{
###
# Internal language specifications by default and optional if null
input_internal_language <- "en"
if (is.null(input_external_language)) input_external_language <- input_internal_language
# If is null the input_family
#  if (is.null(input_family)) input_family <- "Oxide"
###
} # End Internal Settings
##########################################################################
# Part 0: Necessary Participants
{
###
# Element Values
element_values1 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
element_values2 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number2,
input_valence1 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Internal Control
internal_control <- InternalControl_Oxosalt(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Oxosalt Resolution
input_oxosalt_resolution <- OxosaltEquation(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# LaTeX resolution
input_oxosalt_latex <- OxosaltLaTeX(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
input_latex <- input_oxosalt_latex[[2]]
# Chemestry Formule
chemestry_formule_resolution <- input_oxosalt_resolution[nrow(input_latex), c(15:18)]
chemestry_formule_latex <- input_latex[nrow(input_latex), 8]
amount1 <- as.numeric(as.character(chemestry_formule_resolution[1,2]))
amount2 <- as.numeric(as.character(chemestry_formule_resolution[1,4]))
###
} # Fin Part 0
##############################################
# Part 1: Other Necessary Items
{
###
# Roman numerals
romans <- c("I", "II", "III", "IV", "V", "VI", "VII", "")
prefixes <- Nomenclature$Prefixes[[input_external_language]]
medium_part_classic <- Nomenclature$General01[[input_external_language]]
# This position is only for Oxosalt
my_pos <- 5
###
} # Part 1
############################################
OxosaltNomenclature <- function(input_atomic_number1 = NULL,
input_valence1 = NULL,
input_atomic_number2 = NULL,
input_valence2 = NULL,
input_family = "Oxosalt",
input_internal_language = "en",
input_external_language = NULL,
input_PeriodicTable = NULL,
input_Nomenclature = NULL) {
# Internal Settings
{
###
# Internal language specifications by default and optional if null
input_internal_language <- "en"
if (is.null(input_external_language)) input_external_language <- input_internal_language
# If is null the input_family
#  if (is.null(input_family)) input_family <- "Oxide"
###
} # End Internal Settings
##########################################################################
# Part 0: Necessary Participants
{
###
# Element Values
element_values1 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
element_values2 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number2,
input_valence1 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Internal Control
internal_control <- InternalControl_Oxosalt(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Oxosalt Resolution
input_oxosalt_resolution <- OxosaltEquation(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# LaTeX resolution
input_oxosalt_latex <- OxosaltLaTeX(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
input_latex <- input_oxosalt_latex[[2]]
# Chemestry Formule
chemestry_formule_resolution <- input_oxosalt_resolution[nrow(input_latex), c(15:18)]
chemestry_formule_latex <- input_latex[nrow(input_latex), 8]
amount1 <- as.numeric(as.character(chemestry_formule_resolution[1,2]))
amount2 <- as.numeric(as.character(chemestry_formule_resolution[1,4]))
###
} # Fin Part 0
##############################################
# Part 1: Other Necessary Items
{
###
# Roman numerals
romans <- c("I", "II", "III", "IV", "V", "VI", "VII", "")
prefixes <- Nomenclature$Prefixes[[input_external_language]]
medium_part_classic <- Nomenclature$General01[[input_external_language]]
# This position is only for Oxosalt
my_pos <- 5
###
} # Part 1
############################################
if (1 == 2) {
# Parte2: Nomenclature System
{
###
# Only nomenclature for Oxide in the selected language
my_complet_nomenclature <- Nomenclature[[input_family]][[input_external_language]]
# Some details...
position <- ncol(my_complet_nomenclature)
my_stock_nomenclature <- my_complet_nomenclature[,position]
my_classic_nomenclature <- my_complet_nomenclature[,c((position-5): (position-1))]
set_names <- input_Nomenclature$General02[[input_external_language]][,2]
# Modifications for Language English
if (input_external_language == "en") {
# IUPAC
iupac <- paste0(prefixes[amount2, 2],element_values1$name, " ", prefixes[amount1, 2],
medium_part_classic[my_pos, input_external_language])
# Stock
stock <- paste0(my_stock_nomenclature[input_atomic_number1],
" ", "(", romans[element_values1$selected_valence], ")")
# Classic
classic <- my_classic_nomenclature[input_atomic_number1, my_pos]
# IF have 2 "Mono", eliminate the second
if(prefixes[amount1, 2] ==  prefixes[amount2, 2]){
iupac <- paste0(element_values1$name, " ", prefixes[amount1, 2],
medium_part_classic[my_pos, input_external_language])
# iupac <- "CasoB"
}
# Writing errors
iupac <- gsub("ii", "i-i", iupac)
iupac <- gsub("iI", "i-I", iupac)
iupac <- gsub("oO", "o", iupac)
}
# Modifications for Language Spanish
if (input_external_language == "es") {
# IUPAC
iupac <- paste0(prefixes[amount2, 2], element_values1$name,
prefixes[amount1, 2], medium_part_classic[my_pos, input_external_language])
# Stock
stock <- paste0(my_stock_nomenclature[input_atomic_number1],
" ", "(", romans[element_values1$selected_valence], ")")
# Classic
classic <- my_classic_nomenclature[input_atomic_number1, my_pos]
# IF have 2 "Mono", eliminate the second
if(prefixes[amount1, 2] ==  prefixes[amount2, 2]){
iupac <- paste0(prefixes[amount1, 2], medium_part_classic[my_pos, 3],
" ", element_values1$name)
}
# Writing errors
iupac <- gsub("oÓ", "Ó", iupac)
}
# Save all
nomenclature_system01 <- c(iupac, stock, classic, chemestry_formule_latex)
dim(nomenclature_system01) <- c(1, length(nomenclature_system01))
nomenclature_system01 <- as.data.frame(nomenclature_system01)
colnames(nomenclature_system01) <-  set_names
# nomenclature_system02 <- paste0(names(nomenclature_system01), ": ",nomenclature_system01 )
###
} # End Part2
################################################
}
# IUPAC
iupac <- "Coming Soon!"
# Stock
stock <- "Coming Soon!"
# Classic
classic <- "Coming Soon!"
# Save all
nomenclature_system01 <- c(iupac, stock, classic, chemestry_formule_latex)
dim(nomenclature_system01) <- c(1, length(nomenclature_system01))
nomenclature_system01 <- as.data.frame(nomenclature_system01)
colnames(nomenclature_system01) <-  set_names
# Parte3: Return
{
###
# my_exit <- list(nomenclature_system01, nomenclature_system02)
my_exit <- nomenclature_system01
return(my_exit)
###
} # Fin parte 3
######################################
} # End Function OxideNomenclature***
input_atomic_number1 <- 3 #Litio
input_valence1 <- 1
input_atomic_number2 <- 6 #Carbono
input_valence2 <- 4
input_internal_language <- "en"
input_external_language <- "en"
input_family <- "Oxosalt"
input_PeriodicTable <- PeriodicTable
input_Nomenclature <- Nomenclature
OxosaltNomenclature(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_family = input_family,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable,
input_Nomenclature = input_Nomenclature)
input_atomic_number1 <- 3 #Litio
input_valence1 <- 1
input_atomic_number2 <- 6 #Carbono
input_valence2 <- 4
input_internal_language <- "en"
input_external_language <- "en"
input_family <- "Salt"
input_PeriodicTable <- PeriodicTable
input_Nomenclature <- Nomenclature
# Internal Settings
{
###
# Internal language specifications by default and optional if null
input_internal_language <- "en"
if (is.null(input_external_language)) input_external_language <- input_internal_language
# If is null the input_family
#  if (is.null(input_family)) input_family <- "Oxide"
###
} # End Internal Settings
##########################################################################
# Element Values
element_values1 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
element_values2 <- Internal_ElementValues(input_atomic_number1 = input_atomic_number2,
input_valence1 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Internal Control
internal_control <- InternalControl_Oxosalt(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = input_internal_language,
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# Salt Resolution
input_salt_resolution <- SaltEquation(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
# LaTeX resolution
input_salt_latex <- SaltLaTeX(input_atomic_number1 = input_atomic_number1,
input_valence1 = input_valence1,
input_atomic_number2 = input_atomic_number2,
input_valence2 = input_valence2,
input_internal_language = "en",
input_external_language = input_external_language,
input_PeriodicTable = input_PeriodicTable)
input_latex <- input_salt_latex[[2]]
input_salt_resolution
runApp()
runApp()
runApp()
runApp()
